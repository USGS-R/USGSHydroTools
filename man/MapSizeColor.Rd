% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fxn_MapSizeColor.R
\name{MapSizeColor}
\alias{MapSizeColor}
\title{Mapping data with variable size and color to define spatial data}
\usage{
MapSizeColor(df, colorVar, sizeVar, latVar, lonVar, sizeThresh, colThresh, xmin,
  xmax, ymin, ymax, xleft, ytop, includeLabels = FALSE, colVector = c("tan",
  "orange3", "orangered1", "orangered4"), mainTitle = "", labels = "",
  sizeText = "number of samples", colText = "Concentration",
  offsetLat = "", offsetLon = "", offsetLineLat = "",
  offsetLineLon = "", LegCex = 0.9, titlePos = -4, customPar = FALSE,
  colBinText = NA, sizeBinText = NA)
}
\arguments{
\item{df}{Dataframe with 4 required columns that have data to define symbol size, color,
latitude, and longitude of points to be plotted, and optionally 5 addtional columns: label names, 
offset for latitude and longitude for labels, and offset of latitude and longitude for the ending
point of lines pointing to the labels if needed}

\item{colorVar}{string, column name in df to define symbol color. If NA, all points colored the same, and no color legend is shown.}

\item{sizeVar}{string, column name in df to define symbol size. If NA, all points are the same size, and no size legend is shown.}

\item{latVar}{string, column name in df to define latitude}

\item{lonVar}{string, column name in df to define longitude}

\item{sizeThresh}{vector of values used to determine size bins.}

\item{colThresh}{vector of values used to determine color bins.}

\item{xmin}{numeric, left longitudinal boundary for plotting}

\item{xmax}{numeric, right longitudinal boundary for plotting}

\item{ymin}{numeric , bottom latitudinal boundary for plotting}

\item{ymax}{numeric, top latitudinal boundary for plotting}

\item{xleft}{numeric, placement of left side of legend box (min latitude)}

\item{ytop}{numeric, placement of top side of legend box (min longitude)}

\item{includeLabels}{logical, if TRUE labels will be included on plot. Defaults to FALSE.}

\item{colVector}{vector of colors. Should be one more than the length of colThresh.}

\item{mainTitle}{string, text to be used as the title of the plot}

\item{labels}{String variable in dataframe df with label names}

\item{sizeText}{string or expression, text to label the size legend box}

\item{colText}{string or expression, text to label the color legend box}

\item{offsetLat}{Variable in dataframe df for the offset from dataLat used 
for label positioning}

\item{offsetLon}{Variable in dataframe df for the offset from dataLon used 
for label positioning}

\item{offsetLineLat}{Variable in dataframe df for the offset from dataLat used to
position the end of the line drawn to the label. Lines are optional.}

\item{offsetLineLon}{Variable in dataframe df for the offset from dataLon used to
position the end of the line drawn to the label. Lines are optional.}

\item{LegCex}{size of the text and symbols in the legend as numeric. Assigns the
pt.cex and cex arguments in legend() and text(). Does not change the size of the
symbols representing number of samples per site. Default is 0.9}

\item{titlePos}{position of title as numeric. Assigns the line() argument in mtext(). Default is -4.}

\item{customPar}{logical defaults to FALSE. If TRUE, par() should be set by user before calling this function 
(for example, adjusting margins with par(mar=c(5,5,5,5))).}

\item{colBinText}{string vector used to create legend text for color distributions. If NA (default), the 
function will create the text based on colThresh}

\item{sizeBinText}{string vector used to create legend text for size distributions. If NA (default), the 
function will create the text based on sizeThresh}
}
\description{
Mapping routine that displays spatial data variability by size and color differences.
over layers with political boundaries, hydrologic polygons, and hydrologic lines.
}
\examples{
lat <- SI$lat
lon <-  SI$lon
y <- runif(n=length(lat),min=0,max=50)
count <- round(runif(n=length(lat),min=0,max=30),0)
df <- data.frame(y=y, lat=lat,lon=lon,count=count)

colorVar <- "y"
sizeVar <- "count"
latVar <- "lat"
lonVar <- "lon"

xmin <- -96.5
xmax <- -72
ymin <- 40.5
ymax <- 49.5
xleft <- -95
ytop <- 45.3
sizeThresh1 <- 2
sizeThresh2 <- 14
sizeThresh <- c(sizeThresh1, sizeThresh2)
colThresh <- quantile(df[which(df[,colorVar] != 0),colorVar],c(0.25,0.5,0.75))
colThresh <- round(colThresh, digits=2)
LegCex <- 0.9
mainTitle <- "Colors vary by concentration"
titlePos <- -2
colorText <- expression(bold(atop("Colors represent","concentration in ["*mu*"g/L]")))


# Without labels:

#Example works best in a landscape view:
#pdf("GreatLakesExamplePlotNoLabels.pdf",width=11,height=8)
MapSizeColor(df,colorVar,sizeVar,latVar,lonVar,
             sizeThresh,colThresh,
             xmin,xmax,ymin,ymax,
             xleft,ytop,
             mainTitle=mainTitle,
             LegCex=LegCex,titlePos=titlePos)
#dev.off()

# With labels:

df <- merge(df, SI, by=c("lat","lon"))
labelVar <- "Site"
offsetLatVar <- "offsetLat"
offsetLonVar <- "offsetLon"
offsetLineLatVar <- "offsetLineLat"
offsetLineLonVar <- "offsetLineLon" 

#Example works best in a landscape view:
pdf("GreatLakesExamplePlot.pdf",width=11,height=8)
MapSizeColor(df,colorVar,sizeVar,latVar,lonVar,
             sizeThresh,colThresh,
             xmin,xmax,ymin,ymax,
             xleft,ytop,
             mainTitle=mainTitle,includeLabels=TRUE,
             labels=labelVar, offsetLat=offsetLatVar, 
             offsetLon=offsetLonVar,offsetLineLat=offsetLineLatVar,
             offsetLineLon=offsetLineLonVar,LegCex=LegCex,titlePos=titlePos)
dev.off()
#To view the produced plot on a Windows machine, us the following command:
\dontrun{shell.exec("GreatLakesExamplePlot.pdf")}
#To view the produced plot on a Mac, us the following command:
\dontrun{system("open GreatLakesExamplePlot.pdf")}
}
\keyword{color}
\keyword{map}
\keyword{size}
\keyword{spatial}

